language: python
sudo: required
cache: pip

env:
  global:
  - PYTHONUNBUFFERED=yes

stages:
    - lint
    - test
    - cython

matrix:
  include:
  - python: 3.8.0
    env: TOXENV=flake8
    os: linux
    dist: xenial
    stage: lint
  - python: 3.8.0
    env: TOXENV=typecheck
    os: linux
    dist: xenial
    stage: lint
  - python: 3.8.0
    env: TOXENV=apicheck
    os: linux
    dist: xenial
    stage: lint
  - python: 3.8.0
    env: TOXENV=configcheck
    os: linux
    dist: xenial
    stage: lint
  - python: 3.8.0
    env: TOXENV=docstyle
    os: linux
    dist: xenial
    stage: lint
  - python: 3.8.0
    env: TOXENV=bandit
    os: linux
    dist: xenial
    stage: lint
  - python: 3.8.0
    env: TOXENV=spell USE_ENCHANT=y
    os: linux
    dist: xenial
    stage: lint
  - python: 3.6.1
    env: TOXENV=3.6 IDENT="3.6.1" RUN_SUITE=y NO_CYTHON=y
    os: linux
    dist: trusty
    stage: test
  - python: 3.6.2
    env: TOXENV=3.6 IDENT="3.6.2" RUN_SUITE=y NO_CYTHON=y
    os: linux
    dist: trusty
    stage: test
  - python: 3.6.3
    env: TOXENV=3.6 IDENT="3.6.3" RUN_SUITE=y NO_CYTHON=y
    os: linux
    dist: xenial
    stage: test
  - python: 3.6.4
    env: TOXENV=3.6 IDENT="3.6.4" RUN_SUITE=y NO_CYTHON=y
    os: linux
    dist: xenial
    stage: test
  - python: 3.6.5
    env: TOXENV=3.6 IDENT="3.6.5" RUN_SUITE=y NO_CYTHON=y
    os: linux
    dist: xenial
    stage: test
  - python: 3.6.6
    env: TOXENV=3.6 IDENT="3.6.6" RUN_SUITE=y NO_CYTHON=y
    os: linux
    dist: xenial
    stage: test
  - python: 3.6.7
    env: TOXENV=3.6 IDENT="3.6.7" RUN_SUITE=y NO_CYTHON=y
    os: linux
    dist: xenial
    stage: test
  - python: 3.6.8
    env: TOXENV=3.6 IDENT="3.6.8" RUN_SUITE=y NO_CYTHON=y
    os: linux
    dist: xenial
    stage: test
  - python: 3.6.9
    env: TOXENV=3.6 IDENT="3.6.9" RUN_SUITE=y NO_CYTHON=y
    os: linux
    dist: xenial
    stage: test
  - python: 3.7.0
    env: TOXENV=3.7 IDENT="3.7.0" RUN_SUITE=y NO_CYTHON=y
    os: linux
    dist: xenial
    stage: test
  - python: 3.7.1
    env: TOXENV=3.7 IDENT="3.7.1" RUN_SUITE=y NO_CYTHON=y
    os: linux
    dist: xenial
    stage: test
  - python: 3.7.2
    env: TOXENV=3.7 IDENT="3.7.2" RUN_SUITE=y NO_CYTHON=y
    os: linux
    dist: xenial
    stage: test
  - python: 3.7.3
    env: TOXENV=3.7 IDENT="3.7.3" RUN_SUITE=y NO_CYTHON=y
    os: linux
    dist: xenial
    stage: test
  - python: 3.7.4
    env: TOXENV=3.7 IDENT="3.7.4" RUN_SUITE=y NO_CYTHON=y
    os: linux
    dist: xenial
    stage: test
  - python: 3.7.5
    env: TOXENV=3.7 IDENT="3.7.5" RUN_SUITE=y NO_CYTHON=y
    os: linux
    dist: xenial
    stage: test
  - python: 3.8.0
    env: TOXENV=3.8 IDENT="3.8.0" RUN_SUITE=y NO_CYTHON=y
    os: linux
    dist: xenial
    stage: test
  - python: 3.8.1
    env: TOXENV=3.8 IDENT="3.8.0" RUN_SUITE=y NO_CYTHON=y
    os: linux
    dist: xenial
    stage: test
  - python: 3.7.5
    env: TOXENV=3.7 RUN_SUITE=y NO_CYTHON=y
    os: windows
    stage: test
    language: sh
    before_install:
        - choco install python --version=3.7.5
        - export PATH="/c/Python37:/c/Python37/Scripts:$PATH"
        - python -m pip install --upgrade pip wheel
  - python: 3.8.0
    env: TOXENV=3.8-cython IDENT= RUN_SUITE=y USE_CYTHON=y NO_CYTHON=
    os: linux
    dist: xenial
    stage: cython

before_install:
    - if [[ "$TRAVIS_OS_NAME" == "linux" && "$USE_ENCHANT" == "y" ]]; then sudo apt-get install -y enchant libenchant-dev; fi

install:
- python -m pip install -U tox
after_success:
- |
  if [[ ! -z "$IDENT" ]]; then
      .tox/$TOXENV/bin/coverage xml
      .tox/$TOXENV/bin/codecov -e IDENT
  fi;
script: tox -v -- -v
notifications:
  slack:
    secure: rEeKSgjI9TLh1HCFHvM2sTNquvlFj4AhyZqObUn/Rt5mYZpUb0G9HyQZDksm+8sumWt44WDrGIxRiFh1RQW3Onww1+/DBIqORKEZNv63njC4lMjNvk97l5iVHFXqPiVcaIRS3TXgVpNkbc+Diwc0DGgDVu5X2dhe9ClRlV259F2ymt9XkaPIV7qTacbGhH1aX/2suvA023AkXCo2FX2rRNp4yReoHgLdLc7rYz5cc9IruE4QP2AzaD2pnYmX8Fs9UmXPPEh0DxTQ8/FLCg9H2OJBBE/REATjx3QHZMGKiDbDgCPu2MY6gCR/El+eu+eOl2fJ1j2Z/4iOz4vnKHMm4Qamln1WgfGWRp0w30lVvri8pYVn6lSkHC2sIJ4wg26csDCF2WHLusd9bnmYHB/IyY4oFy/wBptvZd5qRkivgsNeD/eOwuVAjryN2qx0kRE6iKACsch3+NAEb1d5kNwebLQ78ETkmwpQOpBwHOngtYo1xbi93VE1DaWJjMO5tStE7dDAou7RQwaApe+H9f6PBu5tuVQgQvhLhlg9laFia+z7lkyb7kwnJ5QG3OimVM9I2fxVtxMPYgnZ/XbPR++9LcwyMRJh9pmYuVzyyHxQZTT8AgHjrPpoRc9meKgWYUhh4AAG/4egviJd0i/DCtV9pOSyOzsXJp2a5B08vA9uueg=
